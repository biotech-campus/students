#!/bin/bash
set -e
# shellcheck disable=SC2086

SING_DIR="/mnt/Storage/testdata/Temp/sing_containers"
REF_DIR="/mnt/Storage/databases/reference"
RESULTS_DIR="/mnt/Storage/testdata/Results"


SLURM_MEMORY=400
SLURM_CPU=42
THREADS=${SLURM_CPU}

IMAGE="${SING_DIR}/megane_1.0.1.sif"


### Params to vary
## HG38
REF_FILE_NAME="GRCh38.d1.vd1.fa"
REF="${REF_DIR}/${REF_FILE_NAME}"
INPUT_SUFFIX="MGI.cutadapt.bwa.MarkDuplicates.bam"
## T2T
# REF_FILE_NAME="GCF_009914755.1_T2T-CHM13v2.0_genomic.fna"
# REF="${REF_DIR}/T2T-CHM13v2.0/GCF_009914755.1/${REF_FILE_NAME}"
# INPUT_SUFFIX="MGI.cutadapt.bwa_T2T-CHM13v2.0.MarkDuplicates.bam"

COHORT_NAME="9_breast_cancer"
# COHORT_NAME="5_norma"
OUTPUT_COHORT_DIR="/mnt/Storage/testdata/Temp/MGE/${COHORT_NAME}"
rm -rvf ${OUTPUT_COHORT_DIR}
mkdir -p ${OUTPUT_COHORT_DIR}

## build one time
TOOL_NAME="megane_build"
echo "Run ${TOOL_NAME}"
MEGANE_BUILD_JOB=$(
    echo -e "#!/bin/bash\n" \
    singularity run \
        --bind ${REF_DIR}:${REF_DIR}:ro \
        --bind ${OUTPUT_COHORT_DIR}:${OUTPUT_COHORT_DIR} \
        --workdir ${OUTPUT_COHORT_DIR} \
        ${IMAGE} \
            build_kmerset \
            -fa ${REF} \
            -outdir ${OUTPUT_COHORT_DIR} |
    sbatch --parsable --job-name ${TOOL_NAME} \
        --mem ${SLURM_MEMORY} --cpus-per-task 1 \
        --time 10:00:00 \
        -o "${OUTPUT_COHORT_DIR}/${TOOL_NAME}.out" \
        -e "${OUTPUT_COHORT_DIR}/${TOOL_NAME}.err" \
        --partition CPU,GPU,DEV --nice=800
)
echo -e "Submited ${TOOL_NAME} ${MEGANE_BUILD_JOB}, \n\t REF ${REF}, \n\t OUTPUT_COHORT_DIR ${OUTPUT_COHORT_DIR}"

rm -vf ${OUTPUT_COHORT_DIR}/dirlist.txt
MEGANE_JOBS=""

## all

## small batch
SAMPLES="000009005450 000009005460 "

for SAMPLE in ${SAMPLES}; do
    TOOL_NAME="megane"
    echo "Run ${SAMPLE} ${TOOL_NAME}, depends on ok ${MEGANE_BUILD_JOB}"

    OUTPUT_SUFFIX="${INPUT_SUFFIX%.*}.${TOOL_NAME}"

    PROJECT=${SAMPLE:0:6}
    SAMPLE_DIR="/mnt/Storage/testdata/Results/${PROJECT}/${SAMPLE}"
    INPUT_DIR="${SAMPLE_DIR}/Alignments"
    INPUT="${INPUT_DIR}/${SAMPLE}.${INPUT_SUFFIX}"
    OUTPUT_DIR="${SAMPLE_DIR}/Variation"
    OUTPUT="${OUTPUT_DIR}/${SAMPLE}.${OUTPUT_SUFFIX}"
    JOB_NAME="${TOOL_NAME}-${SAMPLE}"

    ## create if not exists
    if [[ ! -d ${OUTPUT_DIR} ]]; then 
        mkdir -p ${OUTPUT_DIR}
    fi

    ## do / do not rewrite 
    # if [ ! -f ${OUTPUT} ]; then
        MEGANE_JOB=$(
            echo -e "#!/bin/bash\n" \
            singularity run \
                --bind ${REF_DIR}:${REF_DIR}:ro \
                --bind ${INPUT_DIR}:${INPUT_DIR}:ro \
                --bind ${OUTPUT_DIR}:${OUTPUT_DIR} \
                --workdir ${OUTPUT_DIR} \
                ${IMAGE} \
                    call_genotype_38 \
                        -i ${INPUT}\
                        -fa ${REF} \
                        -mk ${OUTPUT_COHORT_DIR}/${REF_FILE_NAME}.mk \
                        -outdir ${OUTPUT} \
                        -p ${THREADS} |
            sbatch --parsable --job-name ${JOB_NAME} \
                --mem ${SLURM_MEMORY} --cpus-per-task ${SLURM_CPU} \
                --time 2-0 \
                -o "${SAMPLE_DIR}/Logs/${SAMPLE}.${OUTPUT_SUFFIX}.out" \
                -e "${SAMPLE_DIR}/Logs/${SAMPLE}.${OUTPUT_SUFFIX}.err" \
                --partition CPU,GPU,DEV --nice=800 \
                --kill-on-invalid-dep=yes \
                --dependency=afterok:${MEGANE_BUILD_JOB}
        )
	    echo -e "Submited ${JOB_NAME} ${MEGANE_JOB}, \n\t INPUT ${INPUT}, \n\t OUTPUT ${OUTPUT}"

        
        MEGANE_JOBS="${MEGANE_JOBS}:${MEGANE_JOB}"
    # fi

    ## collect files to merge
    echo "${OUTPUT}" >> "${OUTPUT_COHORT_DIR}/dirlist.txt"
done


## merge one time
TOOL_NAME="megane_merge"
echo "Run ${TOOL_NAME}, depends on ok ${MEGANE_JOBS}"
INPUT="${OUTPUT_COHORT_DIR}/dirlist.txt"
MEGANE_MERGE_JOB=$(
    echo -e "#!/bin/bash\n" \
    singularity run \
        --bind ${REF_DIR}:${REF_DIR}:ro \
        --bind ${RESULTS_DIR}:${RESULTS_DIR}:ro \
        --bind ${OUTPUT_COHORT_DIR}:${OUTPUT_COHORT_DIR} \
        --workdir ${OUTPUT_COHORT_DIR} \
        ${IMAGE} \
            joint_calling_hs \
            -merge_mei  \
            -f ${INPUT} \
            -fa ${REF} \
            -cohort_name ${COHORT_NAME} \
            -p ${THREADS} |
    sbatch --parsable --job-name ${TOOL_NAME} \
        --mem ${SLURM_MEMORY} --cpus-per-task ${SLURM_CPU} \
        --time 4-0 \
        -o "${OUTPUT_COHORT_DIR}/${TOOL_NAME}.out" \
        -e "${OUTPUT_COHORT_DIR}/${TOOL_NAME}.err" \
        --partition CPU,GPU,DEV --nice=800 \
        --kill-on-invalid-dep=yes --dependency=afterok${MEGANE_JOBS}
)
echo -e "Submited ${TOOL_NAME} ${MEGANE_MERGE_JOB}, \n\t INPUT ${INPUT}, \n\t OUTPUT_COHORT_DIR ${OUTPUT_COHORT_DIR}"

